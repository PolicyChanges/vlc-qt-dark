diff --git a/main_interface.cpp.orig b/main_interface.cpp
index 6e66afb..b392660 100644
--- a/main_interface.cpp.orig
+++ b/main_interface.cpp
@@ -75,6 +75,88 @@
 #include <vlc_actions.h>                    /* Wheel event */
 #include <vlc_vout_display.h>               /* vout_thread_t and VOUT_ events */
 
+#ifdef Q_OS_WIN
+#include <Windows.h>
+#include <dwmapi.h>
+#pragma comment (lib, "Dwmapi.lib")
+#endif
+
+#ifdef Q_OS_WIN
+enum PreferredAppMode {
+    Default,
+    AllowDark,
+    ForceDark,
+    ForceLight,
+    Max
+};
+
+enum WINDOWCOMPOSITIONATTRIB {
+    WCA_UNDEFINED = 0,
+    WCA_NCRENDERING_ENABLED = 1,
+    WCA_NCRENDERING_POLICY = 2,
+    WCA_TRANSITIONS_FORCEDISABLED = 3,
+    WCA_ALLOW_NCPAINT = 4,
+    WCA_CAPTION_BUTTON_BOUNDS = 5,
+    WCA_NONCLIENT_RTL_LAYOUT = 6,
+    WCA_FORCE_ICONIC_REPRESENTATION = 7,
+    WCA_EXTENDED_FRAME_BOUNDS = 8,
+    WCA_HAS_ICONIC_BITMAP = 9,
+    WCA_THEME_ATTRIBUTES = 10,
+    WCA_NCRENDERING_EXILED = 11,
+    WCA_NCADORNMENTINFO = 12,
+    WCA_EXCLUDED_FROM_LIVEPREVIEW = 13,
+    WCA_VIDEO_OVERLAY_ACTIVE = 14,
+    WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15,
+    WCA_DISALLOW_PEEK = 16,
+    WCA_CLOAK = 17,
+    WCA_CLOAKED = 18,
+    WCA_ACCENT_POLICY = 19,
+    WCA_FREEZE_REPRESENTATION = 20,
+    WCA_EVER_UNCLOAKED = 21,
+    WCA_VISUAL_OWNER = 22,
+    WCA_HOLOGRAPHIC = 23,
+    WCA_EXCLUDED_FROM_DDA = 24,
+    WCA_PASSIVEUPDATEMODE = 25,
+    WCA_USEDARKMODECOLORS = 26,
+    WCA_LAST = 27
+};
+
+struct WINDOWCOMPOSITIONATTRIBDATA {
+    WINDOWCOMPOSITIONATTRIB Attrib;
+    PVOID pvData;
+    SIZE_T cbData;
+};
+
+using fnAllowDarkModeForWindow =  BOOL (WINAPI *)(HWND hWnd, BOOL allow);
+using fnSetPreferredAppMode = PreferredAppMode (WINAPI *)(PreferredAppMode appMode);
+using fnSetWindowCompositionAttribute =  BOOL (WINAPI *)(HWND hwnd, WINDOWCOMPOSITIONATTRIBDATA *);
+
+void setDark_Titlebar(HWND hwnd)
+{
+#ifdef Q_OS_WIN
+    HMODULE hUxtheme = LoadLibraryExW(L"uxtheme.dll", NULL, LOAD_LIBRARY_SEARCH_SYSTEM32);
+    HMODULE hUser32 = GetModuleHandleW(L"user32.dll");
+    fnAllowDarkModeForWindow AllowDarkModeForWindow
+        = reinterpret_cast<fnAllowDarkModeForWindow>(GetProcAddress(hUxtheme, MAKEINTRESOURCEA(133)));
+    fnSetPreferredAppMode SetPreferredAppMode
+        = reinterpret_cast<fnSetPreferredAppMode>(GetProcAddress(hUxtheme, MAKEINTRESOURCEA(135)));
+    fnSetWindowCompositionAttribute SetWindowCompositionAttribute
+        = reinterpret_cast<fnSetWindowCompositionAttribute>(GetProcAddress(hUser32, "SetWindowCompositionAttribute"));
+
+    SetPreferredAppMode(AllowDark);
+    BOOL dark = TRUE;
+    AllowDarkModeForWindow(hwnd, dark);
+    WINDOWCOMPOSITIONATTRIBDATA data = {
+        WCA_USEDARKMODECOLORS,
+        &dark,
+        sizeof(dark)
+    };
+    SetWindowCompositionAttribute(hwnd, &data);
+#endif
+}
+
+#endif
+
 // #define DEBUG_INTF
 
 /* Callback prototypes */
@@ -168,6 +250,10 @@ MainInterface::MainInterface( intf_thread_t *_p_intf ) : QVLCMW( _p_intf )
 
     createMainWidget( settings );
 
+	//HWND h = static_cast<HWND>(QGuiApplication::platformNativeInterface()->
+    //        nativeResourceForWindow("handle", this->windowHandle()));
+	setDark_Titlebar((HWND)this->winId());
+	//UpdateWindow(h);
     /**************
      * Status Bar *
      **************/
diff --git a/qt.cpp.orig b/qt.cpp
index a7e6c8d..078b1e9 100644
--- a/qt.cpp.orig
+++ b/qt.cpp
@@ -31,6 +31,7 @@
 #include <QApplication>
 #include <QDate>
 #include <QMutex>
+#include <QStyleFactory>
 
 #include "qt.hpp"
 
@@ -635,11 +636,39 @@ static void *ThreadPlatform( void *obj, char *platform_name )
     p_sys->filepath =
          getSettings()->value( "filedialog-path", QVLCUserDir( VLC_HOME_DIR ) ).toString();
 
-    /* Loads and tries to apply the preferred QStyle */
-    QString s_style = getSettings()->value( "MainWindow/QtStyle", "" ).toString();
-    if( s_style.compare("") != 0 )
-        QApplication::setStyle( s_style );
-
+    QSettings settings("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize",QSettings::NativeFormat);
+    if(settings.value("AppsUseLightTheme")==0){
+        QApplication::setStyle(QStyleFactory::create("Fusion"));
+        QPalette darkPalette;
+        QColor darkColor = QColor(45,45,45);
+        QColor disabledColor = QColor(127,127,127);
+        darkPalette.setColor(QPalette::Window, darkColor);
+        darkPalette.setColor(QPalette::WindowText, Qt::white);
+        darkPalette.setColor(QPalette::Base, QColor(18,18,18));
+        darkPalette.setColor(QPalette::AlternateBase, darkColor);
+        darkPalette.setColor(QPalette::ToolTipBase, Qt::white);
+        darkPalette.setColor(QPalette::ToolTipText, Qt::white);
+        darkPalette.setColor(QPalette::Text, Qt::white);
+        darkPalette.setColor(QPalette::Disabled, QPalette::Text, disabledColor);
+        darkPalette.setColor(QPalette::Button, darkColor);
+        darkPalette.setColor(QPalette::ButtonText, Qt::white);
+        darkPalette.setColor(QPalette::Disabled, QPalette::ButtonText, disabledColor);
+        darkPalette.setColor(QPalette::BrightText, Qt::red);
+        darkPalette.setColor(QPalette::Link, QColor(42, 130, 218));
+
+        darkPalette.setColor(QPalette::Highlight, QColor(42, 130, 218));
+        darkPalette.setColor(QPalette::HighlightedText, Qt::black);
+        darkPalette.setColor(QPalette::Disabled, QPalette::HighlightedText, disabledColor);
+
+        QApplication::setPalette(darkPalette);
+    }
+	else {
+		/* Loads and tries to apply the preferred QStyle */
+		QString s_style = getSettings()->value( "MainWindow/QtStyle", "" ).toString();
+		if( s_style.compare("") != 0 )
+			QApplication::setStyle( s_style );
+	}
+	
     /* Launch */
     app.exec();
 
